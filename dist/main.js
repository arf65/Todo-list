!function(e){var t={};function o(r){if(t[r])return t[r].exports;var c=t[r]={i:r,l:!1,exports:{}};return e[r].call(c.exports,c,c.exports,o),c.l=!0,c.exports}o.m=e,o.c=t,o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var c in e)o.d(r,c,function(t){return e[t]}.bind(null,c));return r},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=203)}({0:function(e,t){},203:function(e,t,o){"use strict";o.r(t);o(0);class r{constructor(e,t,o,r){this.title=e,this.dueDate=t,this.priority=o,this.description=r}getElement(){return this.element}}class c{constructor(e){this.name=e,this.todos=[]}getTodos(){return this.todos.slice()}addTodo(e,t,o,c){const n=new r(e,t,o,c);return this.todos.push(n),n}deleteTodo(e){this.todos.remove(e)}}const n=document.querySelectorAll("[data-modal-target]"),s=document.querySelectorAll("[data-modal-close]"),i=document.getElementById("overlay");function l(e){null!==e&&(e.classList.remove("active"),i.classList.remove("active"))}i.addEventListener("click",()=>{document.querySelectorAll(".modal.active").forEach(e=>{l(e)})}),n.forEach(e=>{e.addEventListener("click",()=>{!function(e){if(null===e)return;e.classList.add("active"),i.classList.add("active")}(document.querySelector(e.dataset.modalTarget))})}),s.forEach(e=>{e.addEventListener("click",()=>{l(e.closest(".modal"))})}),document.querySelector("[data-add-project]").addEventListener("click",()=>{const e=document.querySelector("[data-project-name]").value;a.addProject(e),document.querySelectorAll(".modal.active").forEach(e=>{l(e)});const t=new d;t.clearActiveProject(),t.displayProjects()}),document.querySelector("[data-add-todo]").addEventListener("click",()=>{let e=document.querySelector(".active-project");console.log("active project: "+e),console.log(a.currentProject.addTodo("test","may 1","high","do stuff"))});const a=new class{constructor(){this.projects=[],this.activeProject=new c("")}addProject(e){const t=new c(e);return this.projects.unshift(t),t}switchProject(e){this.element.removeChild(this.activeProject.getElement()),this.activeProject=e}};class d{constructor(){this.projectDisplay=document.querySelector(".projects__list")}displayProjects(){console.log("running display");let e=document.createElement("li");e.textContent=a.projects[0].name,e.classList.add("active-project","project-element"),this.projectDisplay.insertBefore(e,this.projectDisplay.childNodes[0])}clearActiveProject(){const e=this.projectDisplay.children;for(let t=0;t<e.length;t++)e[t].classList.contains("active-project")&&e[t].classList.remove("active-project")}}}});